buildscript {
    apply plugin: 'hyperskill'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$hs.spring.bootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$hs.spring.dependencyManagementVersion"
    }
}

group 'com.codeofcarbon'
version '1.0-SNAPSHOT'
apply plugin: 'hyperskill'
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

def hsJava = Integer.parseInt(hs.java.version)
def userJava = Integer.parseInt(JavaVersion.current().majorVersion)
def testJava = Math.max(userJava, hsJava)

java.toolchain.languageVersion = JavaLanguageVersion.of(testJava)

compileJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(userJava)
    }
}

compileTestJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(testJava)
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    testImplementation 'com.github.hyperskill:hs-test:release-SNAPSHOT'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceSets {
    main.java.srcDir 'main'
    test.java.srcDir 'test'
}

test {
    systemProperty "file.encoding", "utf-8"
    outputs.upToDateWhen { false }
}

compileJava.options.encoding = 'utf-8'

sourceSets.main.resources.srcDirs = ["src/main/resources"]

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.hibernate:hibernate-validator:7.0.4.Final'
    implementation 'org.projectlombok:lombok'
    implementation 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
}


//tasks.withType(JavaCompile) {
//    options.encoding = 'utf-8'
//}